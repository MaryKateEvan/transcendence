generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


// a model for the legendary Pong game enabling multiplayer real-time games

model Match {
  id          String    @id @default(uuid())
  userId      String    // References User from auth schema
  gameType    String    // Pong, Tic Tac Toe, etc.
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?  @updatedAt  // nullable
  scores      MatchScore[]
  participants MatchParticipant[]
  gameObjectCoordinates MatchObjectCoordinates[]
}

model MatchParticipant {
  id          String    @id @default(uuid())
  matchId     String    // References Match from match schema
  userId      String    // References User from auth schema
  joinedAt    DateTime  @default(now())
  match       Match     @relation(fields: [matchId], references: [id])
}

model MatchScore {
  id          String    @id @default(uuid())
  matchId     String    // References Match from match schema
  userId      String    // References User from auth schema
  score       Int
  createdAt   DateTime  @default(now())
  match       Match     @relation(fields: [matchId], references: [id])
}

model GameObject {
  id          String    @id @default(uuid())
  name        String    // Pong ball, Pong paddle, etc.
  createdAt   DateTime  @default(now())
}

model MatchObjectCoordinates {
  id          String    @id @default(uuid())
  matchId     String    // References Match from match schema
  objectId    String    // References GameObject from match schema
  coordinates Json
  createdAt   DateTime  @default(now())
  match       Match     @relation(fields: [matchId], references: [id])
}
